#!/usr/bin/env bash

source $scr/aux_func.sh

if [ -z "$1" ] || [ -z "$2" ]; then abort "One or more arguments are missing."; fi

##################################################################
ODF_IT=$1

PREV_ODF_IT=$(echo $ODF_IT-1 | bc -l)

RUN=$2

INIT_DIR=$sim/runs

PREV_RUN_DIR=$INIT_DIR/hminus/IT$PREV_ODF_IT/$RUN

ORIG_SRC=$src
ORIG_EXE_FILE=$PREV_RUN_DIR/hminus.exe
DATOM=$PREV_RUN_DIR/datom.inp
FGRID_FILE=$PREV_RUN_DIR/FGRID
FALVD_FILE=$PREV_RUN_DIR/atm.inp
CROSS_SECTION_FILES=$inp/crs/002
CHEMIN_FILE=$PREV_RUN_DIR/chem.inp
RUN_DIR=$INIT_DIR/hminus/IT${ODF_IT}/$RUN

if [ ${ODF_IT} != 0 ]; then

   __OLD_COSI=$PREV_RUN_DIR
   FIOSS_DIR=$INIT_DIR/fioss/IT${PREV_ODF_IT}/$RUN
   POPNUM=${FIOSS_DIR}/POPNUM
   RADIOC=${FIOSS_DIR}/RADIOC
   RADIOL=${FIOSS_DIR}/RADIOL
   RADIOCL=${__OLD_COSI}/RADIOCL
   LBKG=$INIT_DIR/lbkg/IT${PREV_ODF_IT}_IT$ODF_IT/$RUN

fi
#################################################################

### VARIABLES
function error_ifunset() {
  ERRVAR=""
  for A in $@; do
    [[ `getVar $A` == "" ]] &&  ERRVAR="$ERRVAR $A"
  done
  [[ $ERRVAR == "" ]] ||  error "Variable(s)$ERRVAR is/are not set"
}

if [[ "$0" =~ '(^-)|(/bin/)bash' ]]; then

  echo "Script must be called, not sourced!"

else

[[ "$scr" == "" ]] && echo "Variable scr must be set"

source $scr/helper_scripts

trap error ERR

change_dir $INIT_DIR

#[[ -e hminus-fioss.settings ]] && source hminus-fioss.settings

THIS_SCRIPT=$0
echo "===================================================================================================
DATOM =               $DATOM
FGRID_FILE =          $FGRID_FILE
CROSS_SECTION_FILES = $CROSS_SECTION_FILES
PREV_RUN_DIR =        $PREV_RUN_DIR
ORIG_EXE_FILE =       $ORIG_EXE_FILE
FALVD_FILE =          $FALVD_FILE
CHEMIN_FILE =         $CHEMIN_FILE
RUN_DIR =             $RUN_DIR
ORIG_SRC =            $ORIG_SRC
LBKG =                $LBKG
==================================================================================================="; echo

error_ifunset CROSS_SECTION_FILES DATOM FGRID_FILE FALVD_FILE RUN_DIR ORIG_SRC 

pushd . &> /dev/null
cd        $ORIG_SRC

popd &> /dev/null

rm_dir $RUN_DIR; create_dir $RUN_DIR; change_dir ${RUN_DIR}

cp -v ${FGRID_FILE}            ./FGRID
cp -v ${CROSS_SECTION_FILES}/* ./

cp -v ${FALVD_FILE}            ./atm.inp
cp -v ${DATOM}                 ./datom.inp
cp -v ${CHEMIN_FILE}           ./chem.inp

cmd "cp -v ${ORIG_EXE_FILE} ./"

cmd "cp -v ${FIOSS_DIR}/fioss.exe ./"
#cmd "cp -v ${FIOSS_DIR}/mu        ./"

cmd "cp -v $PREV_RUN_DIR/CARDS ./"

cmd "cp -v $PREV_RUN_DIR/Uitenbroek_H_CE.dat ./"
cmd "cp -v $PREV_RUN_DIR/Uitenbroek_H_CI.dat ./"

cmd "cp -v $PREV_RUN_DIR/odf.table ./"
cmd "cp -v $PREV_RUN_DIR/odf.table.grid ./"

cp_file "$PREV_RUN_DIR/vel_field.in" "./" "v"

insert "wrstart" "fort.99" "r"

if [ $ODF_IT -ge 1 ]; then

   cp -v $POPNUM  ./OLDMODEL
   cp -v $RADIOC  ./RADIOC
   cp -v $RADIOL  ./RADIOL
   cp -v $RADIOCL ./RADIOCL

   if [ -d $FIOSS_DIR/src/ ]; then cmd "cp -r $FIOSS_DIR/src/ ./"; fi

   create_dir $RUN_DIR/lbkg/

   if [ $ODF_IT -eq 1 ]; then insert "LBKG 1000 9990" CARDS "a"; fi
   if [ $ODF_IT -eq 1 ]; then insert "OLDSTART"       CARDS "a"; fi

   process_message "Copying the ODFs from $LBKG to $RUN_DIR" "cp $LBKG/* ./lbkg/"

fi

fi

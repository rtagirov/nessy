#!/bin/sh

if [ $# != 8 ]; then
 
   echo expecting 8 arguments: stype, ctype, csnap, rfrac, rname, rmode, rangl, spath
 
   exit 1
 
fi

stype=$1 # spectral type
ctype=$2 # cube type
csnap=$3 # cube snapshot id
rfrac=$4 # reverse of the fraction of the cube to be calculated
rname=$5 # run name
rmode=$6 # lte or nlte
rangl=$7 # run angle (index of the cube inclination)
spath=$8 # path to cube slices

if [ $rmode != lte ] && [ $rmode != nlte ]; then

    echo "rmode is not recognized. abort."

    exit 1

fi

declare -i Nt Ng Ns Nr
declare -i gs ge
declare -i s

Nt=512*512

#full cube, Nr rays per processor
Ng=8192
Ns=${N_sub:-1}
Nr=Nt/Ng/Ns

#---------------------------------------------------------

#quarter of the cube, 1 ray per processor, 16 submissions
#Ng=4096
#Ns=16
#Nr=1

#---------------------------------------------------------

#quarter of the cube, 1 ray per processor, 32 submissions
#Ng=2048
#Ns=32
#Nr=1

#---------------------------------------------------------

#eighth of the cube, 1 ray per processor, 4 submissions
Ng=8192
Ns=4
Nr=1

#---------------------------------------------------------

#eighth of the cube, 4 ray per processor, 1 submissions
#Ng=8192
#Ns=1
#Nr=4

#---------------------------------------------------------

#eighth of the cube, 2 ray per processor, 2 submissions
#Ng=8192
#Ns=2
#Nr=2

#---------------------------------------------------------

#1/32 of the cube, 1 ray per processor, 1 submissions
Ng=8192
Ns=1
Nr=1

#---------------------------------------------------------

walltime=24:00:00

ws=1800
we=2990

#---------------------------------------------------------

#test
#Ns=2
#Ng=2
#Nr=2

#walltime=00:30:00

#ws=1800
#we=1800

#---------------------------------------------------------

base=/rds/general/user/rtagirov/ephemeral/runs/nessy

run=$stype/matthias/$ctype/$csnap/$rfrac/$rname/$rmode/$rangl
#atm=$stype/matthias/$ctype/$spath
atm=$HOME/cubes/matthias/$ctype/$csnap/$spath

scr=$HOME/nessy/scr
obj=$HOME/nessy/obj
inp=$HOME/nessy/inp

ldo=$HOME/log/nessy/$run/out
lde=$HOME/log/nessy/$run/err

slog=$base/$run/success.log
flog=$base/$run/fail.log
spec=$base/$run/spec

mkdir -p $base/$run $ldo $lde

if [ -d $base/$run/inp ]; then rm -r $base/$run/inp; fi

mkdir -p $base/$run/inp

echo Submitting $run:

echo Copying input files...

#cp -r $inp/gen $base/$run/inp

cp -r $inp/gen/CARDS.TEMPLATE $base/$run/inp
cp -r $inp/gen/cards.inp      $base/$run/inp
cp -r $inp/gen/datom.inp      $base/$run/inp
cp -r $inp/gen/fgrid.inp      $base/$run/inp
cp -r $inp/gen/chem.inp       $base/$run/inp
cp -r $inp/gen/fudge.inp      $base/$run/inp
cp -r $inp/gen/sun.inp        $base/$run/inp

ln -s $inp/gen/fort.19.d      $base/$run/inp
ln -s $inp/gen/odf.inp        $base/$run/inp
ln -s $inp/gen/fort           $base/$run/inp
ln -s $inp/gen/crs            $base/$run/inp
ln -s $inp/gen/mol            $base/$run/inp

echo Removing old spectra...

rm -rf   $spec
mkdir -p $spec

echo Removing old logs...

rm -f $slog
rm -f $flog
rm -f $ldo/*
rm -f $lde/*

echo $rfrac $Ng $Ns $Nr > $base/$run/split.log

cp $obj/hminus.exe       $base/$run
cp $obj/fioss.exe        $base/$run

cp $scr/fioss_cplink_dir $base/$run
cp $scr/fioss_mv_results $base/$run
cp $scr/fioss_do2        $base/$run

for ((s=1; s<=Ns; s+=1)); do

gs=(s-1)*Ng+1
ge=s*Ng

IFS='/' read -r -a array <<< "$run"

name=n:${ctype:0:1}/$rfrac/$rname/${rmode:0:1}/$rangl:$s

qsub -v \
rmode=$rmode,\
run=$run,\
atm=$atm,\
slog=$slog,\
flog=$flog,\
spec=$spec,\
frac=$rfrac,\
Nr=$Nr,\
ws=$ws,\
we=$we \
-J $gs-$ge:1 \
-o $ldo \
-e $lde \
-N $name \
-lwalltime=$walltime \
-lselect=1:ncpus=1:mem=2gb:avx2=true nessy_calc_ray_spec

done
